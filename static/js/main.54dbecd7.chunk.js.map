{"version":3,"sources":["movieCard.js","searchMovie.js","App.js","reportWebVitals.js","index.js"],"names":["movieCard","props","className","src","movie","poster_path","alt","title","release_date","vote_average","overview","SearchMovie","useState","query","setQuery","movies","setMovies","searchMovies","e","a","preventDefault","url","fetch","res","json","data","results","console","error","onSubmit","htmlFor","type","name","value","placeholder","onChange","target","filter","map","id","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VAIe,SAASA,EAAUC,GAG9B,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAcC,IAAG,0DAAqDF,EAAMG,MAAMC,aAAeC,IAAKL,EAAMG,MAAMG,MAAQ,YACzI,sBAAKL,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAMG,MAAMG,QACzC,4BACI,mDAAsBN,EAAMG,MAAMI,kBAEtC,4BACI,6CAAgBP,EAAMG,MAAMK,kBAEhC,mBAAGP,UAAU,aAAb,SACKD,EAAMG,MAAMM,iBCdlB,SAASC,IAEpB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACjBD,EAAEE,iBAIIC,EALW,kHAKsGR,EALtG,iDAQKS,MAAMD,GARX,cAQPE,EARO,gBASMA,EAAIC,OATV,OASPC,EATO,OAUbT,EAAUS,EAAKC,SAVF,kDAabC,QAAQC,MAAR,MAba,0DAAH,sDAiBlB,OACI,gCACI,uBAAM1B,UAAU,OAAO2B,SAAUZ,EAAjC,UACI,uBAAOa,QAAQ,QAAQ5B,UAAU,QAAjC,wBACA,uBAAO6B,KAAK,OAAOC,KAAK,QAAQC,MAAOpB,EAAOqB,YAAY,yBAAyBhC,UAAU,QAAQiC,SAAU,SAACjB,GAAD,OAAKJ,EAASI,EAAEkB,OAAOH,UACtI,wBAAQF,KAAK,SAAS7B,UAAU,SAAhC,uBAEJ,qBAAKA,UAAU,YAAf,SACKa,EAAOsB,QAAO,SAACjC,GAAD,OAAWA,EAAMC,eAAaiC,KAAI,SAAClC,GAAD,OAC7C,cAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMmC,Y,ICrBzCC,E,4JAVb,WACE,OACE,sBAAKtC,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAACS,EAAD,W,GALU8B,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.54dbecd7.chunk.js","sourcesContent":["import React from 'react';\n\nimport './movieCard.css';\n\nexport default function movieCard(props) {\n\n\n    return (\n        <div className=\"card\">\n            <img className=\"card--image\" src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${props.movie.poster_path}`} alt={props.movie.title + ' poster'}/>\n            <div className=\"card--content\">\n                <h3 className=\"card--title\">{props.movie.title}</h3>\n                <p>\n                    <small>RELEASE DATE: {props.movie.release_date}</small>\n                </p>\n                <p>\n                    <small>RATING: {props.movie.vote_average}</small>\n                </p>\n                <p className=\"card--desc\">\n                    {props.movie.overview}\n                </p>\n            </div>\n        </div>\n    );\n}","import React, {useState} from 'react';\n\nimport './searchMovie.css'\nimport MovieCard from './movieCard';\n\nexport default function SearchMovie() {\n\n    const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n\n    const searchMovies = async (e) => {\n        e.preventDefault();\n\n        //const query = \"The Social Network\"\n\n        const url = `https://api.themoviedb.org/3/search/movie?api_key=0e18e9be35e51aac5589fd6e348d461e&language=en-US&query=${query}&page=1&include_adult=false`;\n    \n        try{\n            const res = await fetch(url);\n            const data = await res.json();\n            setMovies(data.results);\n        }\n        catch(err){\n            console.error(err);\n        }\n    };\n\n    return(\n        <div>\n            <form className=\"form\" onSubmit={searchMovies}>\n                <label htmlFor=\"query\" className=\"label\">Movie Name</label>\n                <input type=\"type\" name=\"query\" value={query} placeholder=\"i.e The Social Network\" className=\"input\" onChange={(e)=>setQuery(e.target.value)}/>\n                <button type=\"submit\" className=\"button\">Submit</button>\n            </form>\n            <div className=\"card-list\">\n                {movies.filter((movie) => movie.poster_path).map((movie) => (\n                    <MovieCard movie={movie} key={movie.id}/>\n                ))}\n            </div>\n        </div>\n    );\n}","import React, {Component} from 'react';\nimport './App.css';\nimport SearchMovie from './searchMovie';\n\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">React Movie Search</h1>\n        <SearchMovie/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}